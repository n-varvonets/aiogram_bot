import logging
import os
import keyboards.main_navigation as nav
from app.create_bot import dp, bot
from aiogram import executor, types
from db import db

logging.basicConfig(level=logging.INFO)

PATH_TO_DB_FILE = os.path.join("", "db/code_writer.db")
my_orm = db.Database(PATH_TO_DB_FILE)


@dp.message_handler(commands=['start'])
async def start_and_register(message: types.Message):
    """
    if our user is not yet registered (not found in his database), then register him..
    else it was found in the database - we send him SMS warning that he is already registered
    """
    if not my_orm.user_exist(message.from_user.id):  # —ç—Ç–æ –∞–π–¥–∏—à–Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥–µ
        my_orm.add_user(message.from_user.id)
        await bot.send_message(message.from_user.id, "Set your nickname")
    else:
        await bot.send_message(message.from_user.id, "You is already registered", reply_markup=nav.main_menu)


@dp.message_handler()
async def bot_msg(message: types.Message):
    """
    iogram can check type of chat
    –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –µ—Å—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö(–±—É–¥–µ–º —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∏–∫)
    # –ø—Ä–æ–π–¥—è –ø—Ä–æ–≤–µ—Ä–∫—É —á—Ç–æ –µ–≥–æ —Å—Ç–∞—Ç—É—Å —É–∂–µ —É–∫
    :param message: msg from user for set nickname
    :return:
    """
    if message.chat.type == 'private':
        if message.text == 'üë§PROFILE':
            """
            –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç,
            —Ç.–µ. –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Ñ–∏–ª—å, –æ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç 'üë§PROFILE'
            """
            nickname = my_orm.get_nickname(message.from_user.id)
            await bot.send_message(message.from_user.id, "Your nickname is " + nickname)

        else:
            if my_orm.get_sign_up_stage(message.from_user.id) == 'setnickname':
                # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —ç—Ç–∞–ø–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–æ–ª–∂–µ–Ω —É–∫–∑–∞—Ç—å –Ω–∏–∫,
                # —Ç–æ –º—ã —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –Ω–∏–∫ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–¥
                if len(message.text) > 15:
                    await bot.send_message(message.from_user.id, "Nickname should not be more than 15 letters")
                elif '@' in message.text or '/' in message.text:  # –¥–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                    await bot.send_message(message.from_user.id, "You input wrong symbols")
                else:
                    # –ø–æ–ø–¥–∞—è –≤ –¥–∞–Ω–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫–∏.. –Ω–∞–∑–Ω–∞–µ–º –µ–≥–æ –Ω–æ–≤—ã–π –Ω–∏–∫
                    my_orm.set_nickname(message.from_user.id, message.text)
                    my_orm.set_sign_up_stage(message.from_user.id, "done")
                    await bot.send_message(message.from_user.id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ", reply_markup=nav.main_menu)
            else:
                # –∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑—Ö–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–æ—à–µ–ª "—ç—Ç–∞–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏" –∏ –Ω–∞–ø–∏—Å–∞–ª —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ –≤ –¥–∏–∞–ª–æ–≥
                await bot.send_message(message.from_user.id, "wtf?")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
